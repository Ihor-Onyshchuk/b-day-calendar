{"version":3,"sources":["assets/img/user.png","assets/img/load-indicator.gif","config/index.js","api/index.js","services/index.js","components/Button/Button.js","components/MonthsList/MonthsList.js","components/ActiveUsersList/ActiveUsersList.js","components/LoadingIndicator/LoadingIndicator.js","App.js","index.js"],"names":["module","exports","months","monthOptions","value","text","usersByMonth","map","month","color","length","http","axios","create","baseURL","fetchUsers","get","then","data","groupedByMonth","0","1","2","3","4","5","6","7","8","9","10","11","forEach","user","Date","dob","getMonth","push","getUsersByMonth","StyledButton","styled","button","Button","onMouseEnter","onMouseLeave","undefined","MonthsList","otherProps","key","StyledUserCard","div","ActiveUsersList","users","activeMonth","id","firstName","lastName","src","avatarSrc","className","alt","getDate","StyledIndicator","LoadingIndicator","loadingIndicator","App","useState","setUsers","isLoading","setIsLoading","setActiveMonth","useEffect","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcdaf7eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.16fce02f.png\";","module.exports = __webpack_public_path__ + \"static/media/load-indicator.bd85ac8c.gif\";","export const monthList = [\n  { value: 0, text: \"January\" },\n  { value: 1, text: \"February\" },\n  { value: 2, text: \"March\" },\n  { value: 3, text: \"April\" },\n  { value: 4, text: \"May\" },\n  { value: 5, text: \"June\" },\n  { value: 6, text: \"July\" },\n  { value: 7, text: \"August\" },\n  { value: 8, text: \"September\" },\n  { value: 9, text: \"October\" },\n  { value: 10, text: \"November\" },\n  { value: 11, text: \"December\" },\n];\n\nconst monthsWithColor = (months) => (usersByMonth) => {\n  const getColorByLength = (length) => {\n    if (length < 3) return '#898f95';\n    if (length > 2 && length < 7) return '#007bff';\n    if (length > 6 && length < 11) return '#20c997';\n    return '#e11313';\n  };\n\n  return months.map(month => ({\n    ...month,\n    color: getColorByLength(usersByMonth[month.value].length)\n  }))\n}\n\nexport const monthOptions = monthsWithColor(monthList);","import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: 'https://yalantis-react-school-api.yalantis.com/api/task0',\n});","import { http } from \"../api\";\n\nconst getUsersByMonth = (data) => {\n  const groupedByMonth = {\n    0: [], 1: [], 2: [], 3: [], 4: [], 5: [], 6: [], 7: [], 8: [], 9: [], 10: [], 11: [],\n  };\n  data.forEach(user => {\n    const month = (new Date(user.dob)).getMonth();\n    groupedByMonth[month].push(user)\n  });\n  return groupedByMonth;\n}\n\nexport const fetchUsers = () => http.get('/users')\n  .then(({ data }) => getUsersByMonth(data));","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  font-size: 32px;\n  font-weight: 500;\n  line-height: 24px;\n  color: ${({ color }) => color};\n\n  width: 250px;\n  margin: 10px;\n  letter-spacing: 3px;\n  text-transform: uppercase;\n  background: #fff;\n  border-radius: 10px;\n  padding: 20px 25px;\n  border: 1px solid #f8f8f8;\n  transition: box-shadow linear .15s;\n  box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .15);\n\n  &:hover {\n    color: #333;\n    background: #f8f8f8;\n    box-shadow: none !important;\n  }\n\n  &:active,\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = ({\n  text,\n  value,\n  color,\n  onMouseEnter,\n  onMouseLeave\n}) => (\n    <StyledButton\n      color={color}\n      onMouseEnter={() => (onMouseEnter(value))}\n      onMouseLeave={() => onMouseLeave(undefined)}\n    >\n      {text}\n    </StyledButton>\n  );\n\nexport default Button;","import React from 'react';\nimport Button from '../Button/Button';\n\nconst MonthsList = ({ months, ...otherProps }) => (\n  <>\n    {\n      months.map(month => (\n        <Button\n          key={month.text}\n          {...month}\n          {...otherProps}\n        />\n      ))\n    }\n  </>\n);\n\nexport default MonthsList;","import React from 'react';\nimport styled from 'styled-components';\n\nimport avatarSrc from '../../assets/img/user.png';\n\nconst StyledUserCard = styled.div`\n  font-size: 1rem;\n    padding: 10px;\n    margin: 10px;\n\n    display: flex;\n    align-items: center;\n    justify-content: space-center;\n    border: 1px solid #f8f8f8;\n    border-radius: 10px;\n    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .15);\n  }\n\n  .card-img {\n    width: 50px;\n    height: 50px;\n    margin-right: 10px;\n  }\n\n  .card-text {\n    font-weight: 500;\n    letter-spacing: .5px;\n  }\n`;\n\nconst ActiveUsersList = ({ users, activeMonth }) => (\n  <>\n    {users[activeMonth].map(({ id, firstName, lastName, dob }) => (\n      <StyledUserCard key={id}>\n        <img\n          src={avatarSrc}\n          className=\"card-img\"\n          alt=\"user-avatar\"\n        />\n        <div className=\"card-text\">\n          <div>\n            {firstName} {lastName}\n          </div>\n          <div>\n            day of birth: {new Date(dob).getDate()}\n          </div>\n        </div>\n      </StyledUserCard>\n    ))}\n  </>\n);\n\nexport default ActiveUsersList;","import React from 'react';\nimport styled from 'styled-components';\n\nimport loadingIndicator from '../../assets/img/load-indicator.gif';\n\nconst StyledIndicator = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  .load-img {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 200px;\n    height: 200px;\n    z-index: 2;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst LoadingIndicator = () => (\n  <StyledIndicator>\n    <img className=\"load-img\" src={loadingIndicator} alt=\"\" />\n  </StyledIndicator>\n);\n\nexport default LoadingIndicator;","import React, { useState, useEffect } from 'react';\n\nimport { monthOptions } from './config';\nimport { fetchUsers } from './services';\nimport MonthsList from './components/MonthsList/MonthsList';\nimport ActiveUsersList from './components/ActiveUsersList/ActiveUsersList';\nimport LoadingIndicator from './components/LoadingIndicator/LoadingIndicator';\n\nimport './index.scss';\n\nconst App = () => {\n  const [users, setUsers] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeMonth, setActiveMonth] = useState(undefined);\n\n  useEffect(() => {\n    fetchUsers()\n      .then(users => setUsers(users))\n      .then(() => setIsLoading(false))\n  }, []);\n\n  const hasData = () => !!Object.keys(users).length;\n\n  return (\n    <div className=\"container\" >\n      <h1 className=\"my-2\">\n        The Birthdays calendar\n      </h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Months list</h2>\n          <section className=\"d-flex flex-wrap justify-content-between my-3\">\n            {isLoading && <LoadingIndicator />}\n            {hasData() && (\n              <MonthsList\n                months={monthOptions(users)}\n                onMouseEnter={setActiveMonth}\n                onMouseLeave={setActiveMonth}\n              />\n            )}\n          </section>\n          <h2>Friends List</h2>\n          <section className=\"d-flex flex-wrap my-3\">\n            {(activeMonth >= 0) && (\n              <ActiveUsersList\n                users={users}\n                activeMonth={activeMonth}\n              />\n            )}\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}